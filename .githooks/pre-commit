#!/bin/bash
# Pre-commit checks for Android project

set -e

echo "üîç Running pre-commit checks..."

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if this is an Android project
if [ ! -f "app/build.gradle" ] && [ ! -f "app/build.gradle.kts" ]; then
    echo "‚ö†Ô∏è  No Android project detected, skipping Android-specific checks"
    exit 0
fi

# 1. Check for debug statements
echo "üìù Checking for debug statements..."
if git diff --cached --name-only | grep -E '\.(kt|java)$' | xargs grep -nE '(System\.out\.println|Log\.[dev]|console\.log|debugger|TODO|FIXME)' 2>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: Debug statements found${NC}"
    echo "Consider removing them before committing"
    # Uncomment to make this blocking:
    # exit 1
fi

# 2. Check for large files
echo "üì¶ Checking for large files..."
MAX_SIZE=5242880 # 5MB in bytes
for file in $(git diff --cached --name-only); do
    if [ -f "$file" ]; then
        size=$(wc -c < "$file")
        if [ "$size" -gt "$MAX_SIZE" ]; then
            echo -e "${RED}‚ùå File too large: $file ($(($size / 1048576))MB)${NC}"
            echo "Files larger than 5MB should not be committed"
            exit 1
        fi
    fi
done

# 3. Check for secrets/API keys
echo "üîê Checking for secrets..."
SECRET_PATTERNS=(
    'api[_-]?key\s*=\s*["\047][^"\047]{10,}'
    'secret\s*=\s*["\047][^"\047]{10,}'
    'password\s*=\s*["\047][^"\047]{5,}'
    'token\s*=\s*["\047][^"\047]{10,}'
    'aws[_-]?access[_-]?key'
    'private[_-]?key'
)

for pattern in "${SECRET_PATTERNS[@]}"; do
    if git diff --cached -- . ':!test-hooks.sh' | grep -iE "$pattern" >/dev/null 2>&1; then
        echo -e "${RED}‚ùå Potential secret detected!${NC}"
        echo "Pattern: $pattern"
        echo "Make sure you're not committing sensitive data"
        echo "Consider using local.properties or environment variables"
        exit 1
    fi
done

# 4. Check for merge conflict markers
echo "üîÄ Checking for merge conflicts..."
if git diff --cached | grep -E '^(<<<<<<<|=======|>>>>>>>)' >/dev/null; then
    echo -e "${RED}‚ùå Merge conflict markers found${NC}"
    echo "Please resolve all conflicts before committing"
    exit 1
fi

# 5. Run ktlint (if available)
if command -v ktlint &> /dev/null; then
    echo "üé® Running ktlint..."
    if ! git diff --cached --name-only | grep -E '\.kt$' | xargs ktlint --relative 2>/dev/null; then
        echo -e "${RED}‚ùå Kotlin code style issues found${NC}"
        echo "Run: ./gradlew ktlintFormat"
        exit 1
    fi
fi

# 6. Run detekt (if configured)
if [ -f "detekt.yml" ] || [ -f "config/detekt/detekt.yml" ]; then
    echo "üîç Running detekt (quick check)..."
    if git diff --cached --name-only | grep -E '\.(kt|java)$' >/dev/null; then
        # Only run on changed files for speed
        echo "Detekt configured - consider running: ./gradlew detekt"
        # Uncomment to enforce:
        # ./gradlew detekt || exit 1
    fi
fi

echo -e "${GREEN}‚úÖ All pre-commit checks passed!${NC}"
exit 0
