name: Release Verification

on:
  push:
    branches:
      - 'release/**'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  android-build:
    uses: ./.github/workflows/android-build.yml
    with:
      run_tests: true
      build_release: true
      upload_artifacts: true

  verify-version:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v5

      -
        name: Extract and verify version
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          EXPECTED_VERSION="${BRANCH_NAME#release/}"

          # Try Kotlin DSL first
          if [ -f "app/build.gradle.kts" ]; then
            ACTUAL_VERSION=$(grep -E 'versionName\s*=\s*"[^"]*"' app/build.gradle.kts | sed -E 's/.*versionName\s*=\s*"([^"]*)".*/\1/' | head -1)
          else
            # Fallback to Groovy DSL
            ACTUAL_VERSION=$(grep -E 'versionName\s*=?\s*["\047][^"\047]*["\047]' app/build.gradle | sed -E 's/.*versionName\s*=?\s*["\047]([^"\047]*)["\047].*/\1/' | head -1)
          fi

          echo "Branch version: $EXPECTED_VERSION"
          echo "Build version: $ACTUAL_VERSION"

          if [ "$EXPECTED_VERSION" != "$ACTUAL_VERSION" ]; then
            echo "❌ Version mismatch!"
            echo "Expected: $EXPECTED_VERSION"
            echo "Got: $ACTUAL_VERSION"
            exit 1
          fi

          echo "✅ Version matches the release branch"
